from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
from numpy import pi

qreg_q = QuantumRegister(2, 'q')
creg_c = ClassicalRegister(2, 'c')
circuit = QuantumCircuit(qreg_q, creg_c)

circuit.h(qreg_q[0])
circuit.z(qreg_q[1])
circuit.measure(qreg_q[0], creg_c[0])
circuit.tdg(qreg_q[1])
circuit.rz(pi / 2, qreg_q[0])
circuit.ry(pi / 2, qreg_q[1])
circuit.rz(pi / 2, qreg_q[0])
circuit.tdg(qreg_q[1])
circuit.cx(qreg_q[0], qreg_q[1])
circuit.s(qreg_q[1])
circuit.h(qreg_q[1])
circuit.tdg(qreg_q[0])
circuit.s(qreg_q[1])
circuit.measure(qreg_q[0], creg_c[0])
circuit.rzz(pi / 2, qreg_q[0], qreg_q[1])
circuit.rxx(pi / 2, qreg_q[0], qreg_q[1])
circuit.u(pi / 2, pi / 2, pi / 2, qreg_q[0])
circuit.barrier(qreg_q[1])
circuit.s(qreg_q[0])
circuit.swap(qreg_q[0], qreg_q[1])